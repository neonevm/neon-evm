
# Note: This crate must be built using cargo build-bpf

[package]
name = "evm-loader"
version = "0.11.0-dev"
description = "Neon EVM loader"
authors = ["NeonLabs Maintainers <maintainers@neonlabs.org>"]
edition = "2018"

[features]
#! The next feature defines configurations for deploys on different blockchains
## Builds NeonEVM for `alpha`-testing mode
alpha = []
## Builds NeonEVM for testing with goverment system
govertest = []
## Builds NeonEVM for mainnet deployment
mainnet = []
## Builds NeonEVM for testnet deployment
testnet = []
## Builds NeonEVM for devnet deployment
devnet = []

## Builds NeonEVM program for `emergency` mode. In this mode, NeonEVM doesn't process
## any transaction and return error `ProgramError::InvalidInstructionData` with comment
## `Emergency image: all instructions are rejected`. This feature can be used with
## the feature which defines configuration. In this case, the resulting image will
## contain a configuration for appropriated deployment.
emergency = []

## Builds program without debug logs
no-logs = []

## Do not include entrypoint (for include in other application)
no-entrypoint = []
test-bpf = []
custom-heap = []
default = ["custom-heap"]
tracing = [ "environmental" ]

[dependencies]
solana-program = { version = "=1.11.10", default_features = false }
spl-token = { version = "=3.5.0", default_features = false, features = ["no-entrypoint"] }
spl-associated-token-account = { version = "=1.1.1", default_features = false, features = ["no-entrypoint"] }
mpl-token-metadata = { version = "=1.3.2", default_features = false, features = ["no-entrypoint"] }
thiserror = "1.0"
arrayref = "0.3.6"
hex = "0.4.2"
ripemd160 = "0.9.1"
rlp = "0.5"
bytes = "1.2.1"
borsh = "0.9"
bincode = "1.3.3"
evm = { version = "0.18.0", path = "../rust-evm", default_features = false }
evm-runtime = { version = "0.18", path = "../rust-evm/runtime", default-features = false }
const_format = { version = "0.2.21" }
cfg-if = { version = "1.0" }
log = { version = "0.4", default-features = false }
environmental = { version = "1.1", optional = true, default-features = false }

[lib]
crate-type = ["cdylib", "lib"]

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]
